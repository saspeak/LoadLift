configfile: "../2.Read-mapping/bwa_alignment.config.yaml"

species = config["species"]

rule all:
	input: 
		"bed_calls/forward/all_{species}_forward_orient_INDEL_rmv.bed",
		"bed_calls/reverse/all_{species}_reverse_orient_INDEL_rmv.bed"


rule indel_rmv:
    input:
        forward="variant_calls/forward/all_{species}_forward_orient.bcf"
    output:
        "variant_calls/forward/all_{species}_forward_orient_snps_only.recode.bcf"
    params:
        "--remove-indels --recode --recode-INFO-all"
    log:
        forward="logs/INDEL_rmv/mark_all_{species}_forward.log"
    conda:
        "envs/bcftools_env.yaml"
    shell:
        "(vcftools --bcf {input.forward} {params} --out {output}) 2> {log.forward}"

rule format_conversion:
    input:
        forward="variant_calls/forward/all_{species}_forward_orient_snps_only.recode.bcf"
    output:
        "bed_calls/forward/all_{species}_forward_orient.bed"
    params:
        "-O v"
    log:
        forward="logs/bed_con/all_{species}_forward.log"
    conda:
        "envs/bcftools_env.yaml"
    shell:
        "(bcftools view {input.forward} {params} | vcf2bed > {output}) 2> {log.forward}"


rule filter_indel:
    input:
        forward="bed_calls/forward/all_{species}_forward_orient.bed"
    output:
        "bed_calls/forward/all_{species}_forward_orient_INDEL_rmv.bed"
    params:
        "-v 'INDEL'"
    log:
        "logs/INDEL_rmv/all_{species}.log"
    conda:
        "envs/bcftools_env.yaml"
    shell:
        "(grep {params} {input.forward} > {output}) 2> {log}"

rule indel_rmv_rev:
    input:
        UCE_reverse="variant_calls/reverse/all_{species}_reverse_orient.bcf"
    output:
        "variant_calls/reverse/all_{species}_reverse_orient_snps_only.recode.bcf"
    params:
        "--remove-indels --recode --recode-INFO-all"
    log:
        rev="logs/INDEL_rmv/mark_all_{species}_reverse.log"
    conda:
        "envs/bcftools_env.yaml"
    shell:
        "(vcftools --bcf {input.UCE_reverse} {params} --out {output}) 2> {log.rev}"

rule format_conversion_rev:
    input:
        UCE_reverse="variant_calls/reverse/all_{species}_reverse_orient_snps_only.recode.bcf"
    output:
        "bed_calls/reverse/all_{species}_reverse_orient.bed"
    params:
        "-O v"
    log:
        rev="logs/bed_con/all_{species}_reverse.log"
    conda:
        "envs/bcftools_env.yaml"
    shell:
        "(bcftools view {input.UCE_reverse} {params} | vcf2bed > {output}) 2> {log.reverse}"

rule filter_indel_rev:
    input:
        UCE_reverse="bed_calls/reverse/all_{species}_reverse_orient.bed"
    output:
        "bed_calls/reverse/all_{species}_reverse_orient_INDEL_rmv.bed"
    params:
        "-v 'INDEL'"
    log:
        "logs/INDEL_rmv/all_{species}.log"
    conda:
        "envs/bcftools_env.yaml"
    shell:
        "(grep {params} {input.UCE_reverse} > {output}) 2> {log}"
